#ifndef _ENUM_H_
#define _ENUM_H_
//Enums!
enum{	CHAN_BLANK = 0,
		CHAN_CLAN,
		CHAN_QUESTION,
		CHAN_ANSWER,
		CHAN_IMM,
		CHAN_NEWBIE,
		CHAN_CHAT,
		CHAN_GOSSIP,
		CHAN_AUCTION,
		MAX_CHAN
};
enum{	NOBLE_SERF = 0,
		NOBLE_PEASANT,
		NOBLE_FREEMAN,
		NOBLE_PAGE,
		NOBLE_SQUIRE,
		NOBLE_KNIGHT,
		NOBLE_LORD,
		NOBLE_BARON,
		NOBLE_VISCOUNT,
		NOBLE_EARL,
		NOBLE_COUNT,
		NOBLE_DUKE,
		NOBLE_PRINCE,
		NOBLE_CHIEFTAN,
		NOBLE_KING,
		NOBLE_EMPEROR,
		NOBLE_SITH,
		NOBLE_JEDI,
		NOBLE_IMMORTAL,
		MAX_NOBILITY
};

enum{	CON_PLAYING = 0,
		CON_GET_NAME,
		CON_GET_OLD_PASSWORD,
		CON_CONFIRM_NEW_NAME,
		CON_GET_NEW_PASSWORD,
		CON_CONFIRM_NEW_PASSWORD,
		CON_GET_NEW_RACE,
		CON_GET_NEW_SEX,
		CON_GET_NEW_CLASS,
		CON_GET_ALIGNMENT,
		CON_DEFAULT_CHOICE,
		CON_PICK_SKILLS,
		CON_CONFIRM_SKILLS,
		CON_READ_IMOTD,
		CON_READ_MOTD,
		CON_BREAK_CONNECT,
		CON_COPYOVER_RECOVER,
		CON_GET_HAIR,
		CON_GET_WEIGHT,
		CON_GET_HEIGHT,
		CON_GET_EYE,
		CON_GET_SCHOOL,
		CON_GET_HOMETOWN,
		CON_NOTE_TO,
		CON_NOTE_SUBJECT,
		CON_NOTE_EXPIRE,
		CON_NOTE_TEXT,
		CON_NOTE_FINISH,
		CON_GET_NEW_GOD,
		CON_GET_LNAME,
		CON_CONFIRM_LNAME,
		CON_ANSI,
		CON_GET_HAIRTYPE
};

enum{	CLASS_IMMORTAL = 0,
		CLASS_TENDERFOOT,

		CLASS_FIGHTER,
		CLASS_MYSTIC,
		CLASS_DEVOUT,

		CLASS_DUELIST,
		CLASS_WARRIOR,
		CLASS_ROGUE,
		CLASS_ENCHANTER,
		CLASS_MAGE,
		CLASS_ABJURER,
		CLASS_TEMPLAR,
		CLASS_ACOLYTE,
		CLASS_RANGER,

		CLASS_MYRMIDON,
		CLASS_MONK,
		CLASS_CAVALIER,
		CLASS_MERCENARY,
		CLASS_HUNTER,
		CLASS_ASSASSIN,
		CLASS_CHEMIST,
		CLASS_ANTIMAGE,
		CLASS_WIZARD,
		CLASS_SORCERER,
		CLASS_SAGE,
		CLASS_MINSTREL,
		CLASS_PALADIN,
		CLASS_NIGHTSTALKER,
		CLASS_PRIEST,
		CLASS_NECROMANCER,
		CLASS_DRUID,
		CLASS_SHAMAN,
		MAX_CLASS
};

enum{	GTYPE_BLANK = 0,
		GTYPE_IMMORTAL,
		GTYPE_KINGDOM,
		GTYPE_REPUBLIC,
		GTYPE_TRIBE,
		GTYPE_GUILD,
		GTYPE_POPULACE,
		MAX_GTYPE
};

enum{	GUILD_IMMORTAL = 0,
		GUILD_ESONKING,
		GUILD_SKOTHGARDKING,
		GUILD_HALNSBROCKREPUBLIC,
		GUILD_GUILDGUILD,
		GUILD_QUALAMAKING,
		GUILD_DAURINREPUBLIC,
		GUILD_MIRAGEGUILD,
		GUILD_DWARFREPUBLIC,
		GUILD_MALLOKTRIBE,
		GUILD_VERTHOGTTRIBE,
		GUILD_XOUKING,
		GUILD_CHURCHGUILD,
		GUILD_HPOP
};

enum{	DAM_NONE = 0,
		DAM_BASH,
		DAM_PIERCE,
		DAM_SLASH,
		DAM_FIRE,
		DAM_COLD,
		DAM_LIGHTNING,
		DAM_ACID,
		DAM_POISON,
		DAM_NEGATIVE,
		DAM_HOLY,
		DAM_ENERGY,//magic
		DAM_MENTAL,
		DAM_DISEASE,
		DAM_WATER,
		DAM_LIGHT,
		DAM_OTHER,
		DAM_HARM,
		DAM_CHARM,
		DAM_SOUND,
		DAM_WIND,
		DAM_STORM,
		 DAM_TRAPS,
		DAM_EARTH,
		 DAM_WOOD,
		DAM_PLANT,
		 DAM_IRON,//metal?
		DAM_CRYSTAL,
		MAX_DAM
};

enum{	ITEM_LIGHT = 1,
		ITEM_SCROLL,
		ITEM_WAND,
			ITEM_STAFF,
		ITEM_WEAPON,
		ITEM_TRAPPARTS,
		ITEM_TRAP,
		ITEM_COUPON,
		ITEM_ARMOR,
		ITEM_POTION,
		ITEM_FURNITURE,
			ITEM_TRASH,
		ITEM_CONTAINER,
		ITEM_DRINK_CON,
		ITEM_KEY,
		ITEM_FOOD,
		ITEM_MONEY,
			ITEM_BOAT,
		ITEM_CORPSE_NPC,
			ITEM_CORPSE_PC,
		ITEM_FOUNTAIN,
		ITEM_PILL,
			ITEM_PROTECT,
		ITEM_CALTROPS,
		ITEM_WARP_STONE,
			ITEM_ROOM_KEY,
			ITEM_GEM,
		ITEM_JEWELRY,
		ITEM_QUIVER,
		ITEM_ARROW,
			ITEM_RAG,
		ITEM_LUMBER,
		ITEM_FIRE,
		ITEM_PARCHMENT,
			ITEM_BONES,
			ITEM_RIBS,
			ITEM_SCARS,
		ITEM_LOCKPICK,
			ITEM_THROWINGKNIFE,
			ITEM_THROWINGAXE,
			ITEM_THROWINGDART,
			ITEM_INGOT,
		ITEM_SHIELD,
			ITEM_FORGE,
			ITEM_FORGEFUEL,
		ITEM_HONINGSTONE,
		ITEM_PORTAL,
		ITEM_NEEDLE,
			ITEM_DARK,
			ITEM_HERB,
			ITEM_LOCKER,
		MAX_ITEM
};

enum{	ITM_TAKE=1,
		ITM_WEAR_FINGER,
		ITM_WEAR_NECK,
		ITM_WEAR_TORSO,
		ITM_WEAR_HEAD,
		ITM_WEAR_LEGS,
		ITM_WEAR_FEET,
		ITM_WEAR_HANDS,
		ITM_WEAR_ARMS,
		ITM_WEAR_SHIELD,
		ITM_WEAR_ABOUT,
		ITM_WEAR_WAIST,
		ITM_WEAR_WRIST,
		ITM_WEAR_WIELD,
		ITM_HOLD,
		ITM_NO_SAC,
		ITM_WEAR_FLOAT,
		ITM_WEAR_SHOULDER,
		ITM_WEAR_QUIVER,
		ITM_WEAR_FACE,
		ITM_WEAR_TATTOO,
		ITM_WEAR_ANKLE,
		ITM_WEAR_EAR,
		ITM_WEAR_ELBOW,
		ITM_WEAR_SHIN,
		ITM_WEAR_KNEE,
		ITM_WEAR_FLOAT_LIGHT
};

enum{	WEAPON_EXOTIC = 0,
		WEAPON_CLUB,
		WEAPON_LONGSWORD,
		WEAPON_BASTARDSWORD,
		WEAPON_DAGGER,
		WEAPON_DIRK,
		WEAPON_SPEAR,
		WEAPON_POLEARM,
		WEAPON_MACE,
		WEAPON_HAMMER,
		WEAPON_WARHAMMER,
		WEAPON_AXE,
		WEAPON_BATTLEAXE,
		WEAPON_MACHETE,
		WEAPON_SCYTHE,
		WEAPON_FLAIL,
		WEAPON_WHIP,
		WEAPON_RAPIER,
		WEAPON_KATANA,
		WEAPON_SCIMITAR,
		WEAPON_SAI,
		WEAPON_TONFA,
		WEAPON_GAUNTLET,
		WEAPON_NUNCHAKU,
		WEAPON_MAINGAUCHE,
		WEAPON_GLADIUS,
		WEAPON_LANCE,
		WEAPON_STAFF,
		WEAPON_QUARTERSTAFF,
		WEAPON_LONGBOW,
		WEAPON_SHORTBOW,
		WEAPON_MAX
};

enum{	WPN_VAMPIRIC = 1,
		WPN_SHARP,
		WPN_VORPAL,
		WPN_TWO_HANDS,
		WPN_POISON,
		WPN_SERRATED,
		WPN_POWERDRAIN,
		WPN_PESTILENCE,
		WPN_READIED,
		WPN_FLAMING,
		WPN_FROST,
		WPN_SHOCKING,
		WPN_WATER,
		WPN_EARTH,
		WPN_LIGHT,
		WPN_SOUND,
		WPN_WIND,
		WPN_MAGIC,
		WPN_HOLY,
		WPN_DEMONIC,
		WPN_NEURAL,
		WPN_THORNED,
		MAX_WPN
};

enum{	GTE_NORMAL_EXIT = 1,
		GTE_NOCURSE,
		GTE_GOWITH,
		GTE_BUGGY,
		GTE_RANDOM
};

enum{	FRN_STAND_AT = 1,
		FRN_STAND_ON,
		FRN_STAND_IN,
		FRN_SIT_AT,
		FRN_SIT_ON,
		FRN_SIT_IN,
		FRN_RST_AT,
		FRN_RST_ON,
		FRN_RST_IN,
		FRN_SLP_AT,
		FRN_SLP_ON,
		FRN_SLP_IN,
		FRN_PUT_AT,
		FRN_PUT_ON,
		FRN_PUT_IN,
		FRN_SIT_UNDER,
		FRN_REST_UNDER,
		FRN_SLEEP_UNDER,
		FRN_PUT_INSIDE
};

enum{	APPLY_NONE = 0,
		APPLY_SEX,
		APPLY_CLASS,
		APPLY_LEVEL,
		APPLY_AGE,
		APPLY_HEIGHT,
		APPLY_WEIGHT,
		APPLY_MANA,
		APPLY_HIT,
		APPLY_MOVE,
		APPLY_GOLD,
		APPLY_EXP,
		APPLY_AC,
		APPLY_HITROLL,
		APPLY_DAMROLL,
		APPLY_SAVES,
		APPLY_SAVING_SPELL,
		APPLY_SPELL_AFFECT,
		APPLY_STR,
		APPLY_END,
		APPLY_AGI,
		APPLY_INT,
		APPLY_RES,
		APPLY_FTH,
		APPLY_WIS,
		APPLY_CHA,
		APPLY_LCK,
		MAX_APPLY
};

enum{	RM_DARK = 1,
		RM_LIGHT,
		RM_NO_MOB,
		RM_INDOORS,
		RM_NULLA,
		RM_NULLB,
		RM_NULLC,
		RM_NULLD,
		RM_NULLE,
		RM_PRIVATE,
		RM_SAFE,
		RM_SOLITARY,
		RM_PET_SHOP,
		RM_NO_RECALL,
		RM_IMP_ONLY,
		RM_IMM_ONLY,
		RM_HERO_ONLY,
		RM_NEWB_ONLY,
		RM_LAW,
		RM_NOWHERE,
		RM_MOUNT_SHOP,
		RM_BANK
};

enum{	EXT_ISDOOR = 1,
		EXT_CLOSED,
		EXT_LOCKED,
		EXT_PICKPROOF,
		EXT_NOPASS,
		EXT_EASY,
		EXT_HARD,
		EXT_INFURIATING,
		EXT_NOCLOSE,
		EXT_NOLOCK,
		EXT_CLIFFTOP,
		EXT_SECRET,
		EXT_CURTAIN,
		EXT_RANDOM
};

enum{	SECT_INSIDE = 0,
		SECT_CITY,
		SECT_FIELD,
		SECT_FOREST,
		SECT_HILLS,
		SECT_MOUNTAIN,
		SECT_WATER_SWIM,
		SECT_WATER_NOSWIM,
		SECT_UNDERWATER,
		SECT_AIR,
		SECT_DESERT,
		SECT_VOLCANO,
		SECT_RAINFOREST,
		SECT_SWAMP,
		SECT_RIVER,
		SECT_TUNNEL,
		SECT_FORESTCITY,
		SECT_MOUNTAINCITY,
		SECT_DESERTCITY,
		SECT_GRAVEYARD,
		SECT_ROAD,
		SECT_DIRTROAD,
		SECT_CITYROAD,
		SECT_DIRTPATH,
		SECT_GOODTEMPLE,
		SECT_NEUTRALTEMPLE,
		SECT_EVILTEMPLE,
		SECT_CLIFFSIDE,
		SECT_ICETUNNEL,
		SECT_BOARDWALK,
		SECT_BEACH,
		SECT_SEWER,
		SECT_MAX
};

enum{	WEAR_NONE = -1,
		WEAR_LIGHT,
		WEAR_HEAD,
		WEAR_EAR_L,
		WEAR_EAR_R,
		WEAR_FACE,
		WEAR_NECK_1,
		WEAR_NECK_2,
		WEAR_QUIVER,
		WEAR_SHOULDER,
		WEAR_PENDANT,
		WEAR_ABOUT,
		WEAR_TORSO,
		WEAR_LODGE_RIB,
		WEAR_TATTOO,
		WEAR_ARMS,
		WEAR_LODGE_ARM,
		WEAR_ELBOW_L,
		WEAR_ELBOW_R,
		WEAR_WRIST_L,
		WEAR_WRIST_R,
		WEAR_HANDS,
		WEAR_FINGER_L,
		WEAR_FINGER_R,
		WEAR_WIELD,
		WEAR_SECONDARY,
		WEAR_HOLD_R,
		WEAR_HOLD_L,
		WEAR_SHIELD,
		WEAR_WAIST,
		WEAR_LEGS,
		WEAR_LODGE_LEG,
		WEAR_KNEE_L,
		WEAR_KNEE_R,
		WEAR_SHIN_L,
		WEAR_SHIN_R,
		WEAR_ANKLE_L,
		WEAR_ANKLE_R,
		WEAR_FEET,
		WEAR_FLOAT,
		WEAR_FLOAT_LIGHT,
		MAX_WEAR
};

enum{	WEIGHT_EMACIATED = 1,
		WEIGHT_SKINNY,
		WEIGHT_SLIM,
		WEIGHT_PETITE,
		WEIGHT_SLENDER,
		WEIGHT_ATHLETIC,
		WEIGHT_AVERAGE,
		WEIGHT_MUSCULAR,
		WEIGHT_VOLUPTUOUS,
		WEIGHT_PLUMP,
		WEIGHT_HUSKY,
		WEIGHT_OBESE,
		WEIGHT_FLABBY,
		WEIGHT_BUSTY
};

enum{	HEIGHT_TINY = 1,
		HEIGHT_SHORT,
		HEIGHT_AVERAGE,
		HEIGHT_TALL,
		HEIGHT_GIANT
};

enum{	EYE_BLUE = 1,
		EYE_GREEN,
		EYE_HAZEL,
		EYE_YELLOW,
		EYE_LAVENDER,
		EYE_RED,
		EYE_BLACK,
		EYE_WHITE,
		EYE_VIOLET,
		EYE_AZURE,
		EYE_EMERALD,
		EYE_GREY,
		EYE_BROWN,
		EYE_CYAN,
		EYE_AMBER,
		EYE_OLIVE,
		EYE_SILVER,
		EYE_GOLD,
		EYE_SAPPHIRE,
		EYE_AMETHYST,
		EYE_RUBY,
		EYE_ONYX,
		EYE_TOPAZ,
		EYE_AQUA,
		EYE_COPPER,
		EYE_TURQOISE,
		EYE_PURPLE
};

enum{	HAIR_BLONDE = 1,
		HAIR_BLUE,
		HAIR_RED,
		HAIR_GOLD,
		HAIR_BROWN,
		HAIR_WHITE,
		HAIR_BLACK,
		HAIR_AUBURN,
		HAIR_GREEN,
		HAIR_SILVER,
		HAIR_GREY,
		HAIR_SALTPEPPER,
		HAIR_STRAWBERRYBLONDE,
		HAIR_VIOLET,
		HAIR_SPECKLED,
		HAIR_EMERALD,
		HAIR_SAPPHIRE,
		HAIR_ONYX,
		HAIR_AQUA,
		HAIR_COPPER,
		HAIR_RUBY,
		HAIR_TURQOISE,
		HAIR_AMBER
};

enum{	S_HAIR_SHORT = 1,
		S_HAIR_LONG,
		S_HAIR_SPIKY,
		S_HAIR_CURLY,
		S_HAIR_FRAZZLED,
		S_HAIR_GREYING,
		S_HAIR_DYED,
		S_HAIR_BRAIDED,
		S_HAIR_SHAVED,
		S_HAIR_THINNING,
		S_HAIR_LUSCIOUS,
		S_HAIR_WAVY,
		S_HAIR_SHINY,
		S_HAIR_BALD,
		S_HAIR_STRAIGHT,
		S_HAIR_UNKEMPT,
		S_HAIR_LIGHT,
		MAX_S_HAIR
};

enum{	PIETY_AC = 0, PIETY_MANA, PIETY_DAMAGE };

enum{	SEX_NEUTRAL = 0, SEX_MALE, SEX_FEMALE };

enum{	AC_PIERCE = 0, AC_BASH, AC_SLASH, AC_EXOTIC };

enum{	DICE_NUMBER = 0, DICE_TYPE, DICE_BONUS };

enum{	SIZE_TINY = 1, SIZE_SMALL, SIZE_MEDIUM, SIZE_LARGE, SIZE_HUGE, SIZE_GIANT };

enum{	ARMOR_NONE = 0, ARMOR_CLOTHING, ARMOR_LIGHT, ARMOR_MEDIUM, ARMOR_HEAVY, MAX_ARMOR };

enum{	DIR_NORTH = 0, DIR_EAST, DIR_SOUTH, DIR_WEST, DIR_UP, DIR_DOWN };

enum{	COND_DRUNK = 0, COND_FULL, COND_THIRST, COND_HUNGER };

enum{	POS_DEAD = 0, POS_MORTAL, POS_INCAP, POS_STUNNED, POS_SLEEPING, POS_RESTING, POS_SITTING, POS_FIGHTING, POS_STANDING };

enum{	TAR_IGNORE = 0,		//No arguments
		TAR_CHAR_OFFENSIVE,	//Attack a char victim
		TAR_CHAR_DEFENSIVE,	//Protect a char victim
		TAR_CHAR_SELF,		//Cast on self
		TAR_CHAR_WORLD,		//Grab char from world
		TAR_CHAR_IGNORE,	//Grab a char or take no argument currently defaults to aggro
		TAR_OBJ_INV,		//Grab something from caster's inventory
		TAR_OBJ_EQ,			//Grab something from caster's equipment
		TAR_OBJ_CHAR_DEF,	//protect a character or object
		TAR_OBJ_CHAR_OFF,	//Attack a character or object
		TAR_OBJ,			//Target an object
		TAR_DOOR,			//Target a door
		MAX_TAR
};

enum{	TARGET_CHAR = 0, TARGET_OBJ, TARGET_ROOM, TARGET_NONE };

enum{	SKILL_NULL = 0, SKILL_NORMAL, SKILL_SPELL, SKILL_NATURAL };

enum{	SUN_DARK = 0, SUN_RISE, SUN_LIGHT, SUN_SET, MAX_SUN };

enum{	SKY_CLOUDLESS = 0,
		SKY_CLOUDY,
		SKY_RAINING,
		SKY_WINDY,
		SKY_LIGHTNING,
		SKY_SNOWING,
		SKY_BLIZZARD,
		SKY_FOGGY,
		SKY_HAILSTORM,
		SKY_THUNDERSTORM,
		SKY_SANDSTORM,
		SKY_HEATWAVE,
		SKY_FREEZE,
		SKY_ICESTORM
};

enum{ TO_ROOM = 0, TO_NOTVICT, TO_VICT, TO_CHAR, TO_ALL };

enum{	STAT_STR = 0,
		STAT_END,
		STAT_AGI,
		STAT_INT,
		STAT_RES,
		STAT_FTH,
		STAT_WIS,
		STAT_CHA,
		STAT_LCK,
		MAX_STATS };

enum{	TO_AFFECTS = 0, TO_OBJECT, TO_IMMUNE, TO_RESIST, TO_VULN, TO_WEAPON, TO_WEARY };

enum{	ARR_NULL = 0, ARR_FIRE, ARR_COLD, ARR_SHOCK, ARR_SHARP, ARR_POISON, ARR_BARB, MAX_ARR };

enum{	PRG_MPROG = 0, PRG_OPROG, PRG_RPROG };

enum{	AREA_NONE = 0, AREA_CHANGED, AREA_ADDED, AREA_LOADING };

enum{	IS_NORMAL = 0, IS_IMMUNE, IS_RESISTANT, IS_VULNERABLE };

enum{	CLIMATE_ARID = 0,
		CLIMATE_TEMPERATE,
		CLIMATE_TROPICAL,
		CLIMATE_FRIGID,
		CLIMATE_DESOLATE,
		CLIMATE_OCEAN,
		MAX_AREATYPES
};

enum{	PROMPT_DEFAULT = 0,PROMPT_BRIEF,PROMPT_FULL};

enum{	PK = 0,PD,MK,MD,KILL_MAX};

enum{	XP_GENERAL = 0,
		XP_MAGIC,
		XP_SKILL,
		XP_LEVEL,
		MAX_XP
};

enum{	P_HAIR = 0,
		P_SHAIR,
		P_EYE,
		P_WEIGHT,
		P_HEIGHT,
		P_MAX
};

enum{	HEAT_COLD = 0,
		HEAT_NORMAL,
		HEAT_HIGH,
		HEAT_BLAST,
		MAX_HEAT
};

enum{	FORGE_JOINELEMENT = 0,
		FORGE_JOINCOMPOUND,
		FORGE_GENCOMPOUND,
		MAX_FORGE
};

enum{	AF_BLANK = 0,
		AF_BLIND,
		AF_INVISIBLE,
			AF_SPELLSHIELD,
		AF_DETECT_INVIS,
		AF_DETECT_MAGIC,
		AF_DETECT_HIDDEN,
			AF_PHASE,
		AF_SANCTUARY,
			AF_FAERIE_FIRE,//
			AF_INFRARED,
			AF_CURSE,
			AF_SAP,//
		AF_POISON,
		AF_DEAF,
			AF_OVERDRIVE,
		AF_SNEAK,
		AF_HIDE,
		AF_SLEEP,
		AF_CHARM,
		AF_FLYING,
		AF_PASS_DOOR,
		AF_HASTE,
			AF_CALM,
		AF_PLAGUE,
			AF_WEAKEN,
		AF_DARK_VISION,
			AF_BERSERK,
			AF_SWIM,
		AF_REGENERATION,
		AF_SLOW,
			AF_MIRAGE,
			AF_RUPTURE,
			AF_PSWORD,
			AF_DSTRIKE,
			AF_ENTANGLED,
			AF_SNARED,
			AF_ALERTNESS,
			AF_CAMOFLAGE,
			AF_LEADERSHIP,//
			AF_AGUE,
		AF_PREVENTHEAL,
		AF_PERFECTSNEAK,
		AF_DEGENERATION,
			AF_GUARDIAN,
			AF_CONFUSION,
			AF_WEARY,//
			AF_SLOWCAST,
		AF_MANAREGEN,
			AF_FORTIFY,
			AF_FORCEVOID,
			AF_INSOMNIA,
			AF_NARCOLEPSY,
			AF_CATALEPSY,
		AF_SILENCE,
			AF_DOUBLECAST,
			AF_LETHARGY,
			AF_BDAMTAKE,
			AF_BDAMGIVE,
			AF_DEFENDER,
			AF_BULWARK,
			AF_AMIABLE,
			AF_SENSES,
			AF_SLOWWALK,
			AF_LIGHTSLEEP,
			AF_MARK,
			AF_NIGHTMARE,
			AF_RAVAGE,
			AF_STRAFE,
			AF_STALK,
			AF_SHARPSHOOT,
			AF_IMMOLATION,
			AF_DROWNING,
			AF_ESHIELD,
			AF_TRANQUILITY,
			AF_VENOM,
			AF_WINDWALK,
			AF_DULLSPELL,
			AF_DISPERSION_FIELD,
			AF_VERNIER_RED,
			AF_STAMINA_BOOST,
			AF_IMMATERIAL_BURST,
			AF_REPULSOR_FIELD,
			AF_ETHEREAL_ALACRITY,
			AF_POWER_RUSH,
		MAX_AFF
};

enum{	AT_BLANK = 0,
		AT_IS_NPC,
		AT_SENTINEL,
		AT_SCAVENGER,
		AT_NOKILL,
		AT_MOUNT,
			AT_AGGRESSIVE,
			AT_STAY_AREA,
			AT_WIMPY,
			AT_PET,
			AT_REMEMBERS,
			AT_PASSIVE,
			AT_DRAGON,
		AT_NOPEEK,
			AT_GUARD,
			AT_UNDEAD,
		AT_TRUE_SIGHT,
			AT_CLERIC,
			AT_MAGE,
			AT_THIEF,
			AT_FIGHTER,
			AT_NOALIGN,
		AT_NOPURGE,
			AT_OUTDOORS,
		AT_AGGRESSIVE_MOB,
			AT_INDOORS,
		AT_WARHORSE,
		AT_IS_HEALER,
			AT_GAIN,
			AT_UPDATE_ALWAYS,
			AT_IS_CHANGER,
		AT_BANKER,
			AT_NULL,
		MAX_ACT
};

enum{	PL_BLANK = 0,
		PL_IS_NPC,
			PL_BASHED,
		PL_AUTOEXIT,
		PL_AUTOLOOT,
		PL_AUTOSAC,
		PL_AUTOGOLD,
		PL_AUTOSPLIT,
		PL_ARENA,
			PL_AUTOWEATHER,
			PL_FORGING,
		PL_AUTOMAP,
		PL_HOLYLIGHT,
		PL_AUTOASSIST,
		PL_CANLOOT,
		PL_NOSUMMON,
		PL_NOFOLLOW,
			PL_MORTAL_LEADER,
		PL_COLOR,
			PL_PERMIT,
			PL_NULLG,
		PL_LOG,
		PL_DENY,
		PL_FREEZE,
			PL_THIEF,
			PL_KILLER,
		PL_PK,
		PL_SCRAMBLE,
		MAX_PLR
};

enum{	OF_BLANK = 0,
		OF_AREA_ATTACK,
		OF_BACKSTAB,
		OF_BASH,
		OF_BERSERK,
		OF_DISARM,
		OF_SONIC_IMPACT,
		OF_FADE,
		OF_FAST,
		OF_KICK,
		OF_KICK_DIRT,
		OF_CRITICAL,
		OF_RESCUE,
		OF_TAIL,
		OF_TRIP,
		OF_CRUSH,
		OF_SECONDATTACK,
		OF_THIRDATTACK,
		OF_NULLD,
		OF_DOWNSTRIKE,
		OF_FALCON,
		OF_WAIT,
		OF_BRAWL,
		OF_NULLG,
		AST_ALL,
		AST_ALIGN,
		AST_RACE,
		AST_PLAYERS,
		AST_GUARD,
		AST_VNUM,
		MAX_OFF
};

enum{	DF_BLANK = 0,
		DF_DODGE,
		DF_PARRY,
		DF_SIDESTEP,
		DF_COUNTER,
		DF_RIPOSTE,
		DF_TROMPEMENT,
		DF_DUALSHIELD,
		DF_SHIELDBLOCK,
		DF_FEINT,
		DF_EVADE,
		DF_DUCK,
		DF_COUNTERSPIN,
		DF_ABSORB,
		DF_COULE,
		DF_DIVERT,
		DF_REBOUND,
		DF_RICOCHET,
		DF_PREPATTACK,
		DF_SHUNT,
		DF_TRUEBELIEF,
		MAX_DEF
};

enum{	FRM_BLANK = 0,
		FRM_EDIBLE,
		FRM_POISON,
		FRM_MAGICAL,
		FRM_INSTANT_DECAY,
		FRM_OTHER,
		FRM_SILENT,
			FRM_NULLB,
		FRM_ANIMAL,
		FRM_SENTIENT,
		FRM_UNDEAD,
		FRM_CONSTRUCT,
		FRM_MIST,
		FRM_INTANGIBLE,
		FRM_BIPED,
		FRM_CENTAUR,
		FRM_INSECT,
		FRM_SPIDER,
		FRM_CRUSTACEAN,
		FRM_WORM,
		FRM_BLOB,
			FRM_NULLC,
			FRM_NULLD,
		FRM_MAMMAL,
		FRM_BIRD,
		FRM_REPTILE,
		FRM_SNAKE,
		FRM_DRAGON,
		FRM_AMPHIBIAN,
		FRM_FISH,
		FRM_COLD_BLOOD,
		MAX_FRM
};

enum{	PRT_BLANK = 0,
		PRT_HEAD,
		PRT_ARMS,
		PRT_LEGS,
		PRT_HEART,
		PRT_BRAINS,
		PRT_GUTS,
		PRT_HANDS,
		PRT_FEET,
		PRT_FINGERS,
		PRT_EAR,
		PRT_EYE,
		PRT_LONG_TONGUE,
		PRT_EYESTALKS,
		PRT_TENTACLES,
		PRT_FINS,
		PRT_WINGS,
		PRT_TAIL,
			PRT_NULLA,
			PRT_NULLB,
			PRT_NULLC,
		PRT_CLAWS,
		PRT_FANGS,
		PRT_HORNS,
		PRT_SCALES,
		PRT_TUSKS,
		MAX_PRT
};

enum{	CM_BLANK = 0,
		CM_QUIET,
		CM_DEAF,
		CM_NOWIZ,
		CM_NOAUCTION,
		CM_NOGOSSIP,
		CM_NOQUESTION,
		CM_NOCHAT,
		CM_NOHOUSE,
		CM_NOQUOTE,
		CM_SHOUTSOFF,
		CM_BUSY,
		CM_COMPACT,
		CM_BRIEF,
		CM_PROMPT,
		CM_COMBINE,
		CM_TELNET_GA,
		CM_SHOW_AFFECTS,
		CM_NONEWBIE,
		CM_STUPID,
		CM_NOEMOTE,
		CM_NOSHOUT,
		CM_NOTELL,
		CM_NOCHANNELS,
		CM_SNOOP_PROOF,
		CM_AFK,
		CM_DEBUG,
		CM_NOOOC,
		CM_ROMEXITS,
		CM_ROMLOOK,
		CM_MORPH,
		CM_NONOTES,
		CM_LIFELINE,
		MAX_CMM
};

enum{	WZ_ON = 0,
		WZ_PREFIX,
		WZ_TICKS,
		WZ_LOGINS,
		WZ_SITES,
		WZ_LINKS,
		WZ_NEWBIE,
		WZ_SPAM,
		WZ_DEATHS,
		WZ_PKS,
		WZ_RESETS,
		WZ_MOBDEATHS,
		WZ_FLAGS,
		WZ_PENALTIES,
		WZ_SACCING,
		WZ_LEVELS,
		WZ_LOAD,
		WZ_RESTORE,
		WZ_SNOOPS,
		WZ_SWITCHES,
		WZ_SECURE,
		MAX_WIZ
};

enum{	RS_BLANK = 0,
		RS_SUMMON,
		RS_CHARM,
		RS_MAGIC,
		RS_WEAPON,
		RS_BASH,
		RS_PIERCE,
		RS_SLASH,
		RS_FIRE,
		RS_COLD,
		RS_LIGHTNING,
		RS_ACID,
		RS_POISON,
		RS_NEGATIVE,
		RS_HOLY,
		RS_ENERGY,
		RS_MENTAL,
		RS_DISEASE,
		RS_WATER,
		RS_LIGHT,
		RS_SOUND,
		RS_TRAPS,
		RS_EARTH,
			RS_NULLC,
		RS_WOOD,
		RS_PLANT,
		RS_IRON,
		RS_WIND,
		RS_CRYSTAL,
		RS_HARM,
		MAX_RES
};

enum{	RAF_BLANK = 0,
		RAF_REGENERATION,
		RAF_MAGIC_DAMPEN,
		RAF_FEEDBACK,
		RAF_NEGATIVE,
		RAF_CALTROPS,
		RAF_LIGHT,
		RAF_DARK,
		RAF_FROSTFIELD,
		RAF_ALARM,
		RAF_MWALL,
		RAF_QUAGMIRE,
		RAF_SMOKESCREEN,
		RAF_GROVE,
		RAF_FOREST_MIST,
		RAF_WINDWALL,
		RAF_PORTALBLOCK,
		MAX_RAF
};

enum{	SPL_DAM = 0,
		SPL_BUF,
		SPL_NRF,
		SPL_CST,
		MAX_SPL
};

enum{	RACE_BLANK = 0,
		RACE_HUMAN,
		RACE_ALGID,
		RACE_QUOLIN,
		RACE_DAURIN,
		RACE_DWARF,
		RACE_VITHE,
		RACE_OGRE,
		RACE_FAERIE,
		MAX_RACE
};

enum{	AREA_GROUP_BLANK = 0,
		AREA_GROUP_IMMORTAL,
		AREA_GROUP_ESON,
		AREA_GROUP_MAX
};

enum{	MORPH_BLANK = 0,
		MORPH_SERPENT,
		MORPH_CANINE,
		MORPH_FELINE,
		MORPH_URSA,
		MORPH_AVIAN,
		MORPH_AQUATIC,
		MAX_MORPH
};

#endif
